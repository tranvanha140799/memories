{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\memory\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const classes = useStyles();\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) dispatch(updatePost(currentId, postData));else dispatch(createPost(postData));\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? `Updating` : `Creating`, \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => {\n          setPostData({ ...postData,\n            creator: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => {\n          setPostData({ ...postData,\n            title: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => {\n          setPostData({ ...postData,\n            message: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => {\n          setPostData({ ...postData,\n            tags: e.target.value.split(',')\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        fullWidth: true,\n        onClick: clear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"5TcF5hhgRcCLOu+TTCvdvwq4HNs=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/React/memory/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","classes","post","state","posts","find","p","_id","postData","setPostData","creator","title","message","tags","selectedFile","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const post = useSelector((state) =>\r\n        currentId ? state.posts.find((p) => p._id === currentId) : null\r\n    );\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: '',\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId) dispatch(updatePost(currentId, postData));\r\n        else dispatch(createPost(postData));\r\n\r\n        clear();\r\n    };\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({\r\n            creator: '',\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n                className={`${classes.root} ${classes.form}`}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Typography variant=\"h6\">\r\n                    {currentId ? `Updating` : `Creating`} a Memory\r\n                </Typography>\r\n                <TextField\r\n                    name=\"creator\"\r\n                    variant=\"outlined\"\r\n                    label=\"Creator\"\r\n                    fullWidth\r\n                    value={postData.creator}\r\n                    onChange={(e) => {\r\n                        setPostData({ ...postData, creator: e.target.value });\r\n                    }}\r\n                />\r\n                <TextField\r\n                    name=\"title\"\r\n                    variant=\"outlined\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(e) => {\r\n                        setPostData({ ...postData, title: e.target.value });\r\n                    }}\r\n                />\r\n                <TextField\r\n                    name=\"message\"\r\n                    variant=\"outlined\"\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={(e) => {\r\n                        setPostData({ ...postData, message: e.target.value });\r\n                    }}\r\n                />\r\n                <TextField\r\n                    name=\"tags\"\r\n                    variant=\"outlined\"\r\n                    label=\"Tags\"\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(e) => {\r\n                        setPostData({ ...postData, tags: e.target.value.split(',') });\r\n                    }}\r\n                />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({ base64 }) =>\r\n                            setPostData({ ...postData, selectedFile: base64 })\r\n                        }\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className={classes.buttonSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    onClick={clear}\r\n                >\r\n                    Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}