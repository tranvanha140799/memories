{"ast":null,"code":"import * as actionTypes from '../constants/actionTypes'; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_ALL:\n      return action.payload;\n\n    case actionTypes.CREATE:\n      return [...posts, action.payload];\n\n    case actionTypes.UPDATE:\n    case actionTypes.LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case actionTypes.DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["D:/React/memory/client/src/reducers/posts.js"],"names":["actionTypes","posts","action","type","FETCH_ALL","payload","CREATE","UPDATE","LIKE","map","post","_id","DELETE","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,0BAA7B,C,CAEA;;AACA,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKH,WAAW,CAACI,SAAjB;AACI,aAAOF,MAAM,CAACG,OAAd;;AACJ,SAAKL,WAAW,CAACM,MAAjB;AACI,aAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACJ,SAAKL,WAAW,CAACO,MAAjB;AACA,SAAKP,WAAW,CAACQ,IAAjB;AACI,aAAOP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IACbA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IADhD,CAAP;;AAGJ,SAAKV,WAAW,CAACY,MAAjB;AACI,aAAOX,KAAK,CAACY,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAA3C,CAAP;;AACJ;AACI,aAAOJ,KAAP;AAbR;AAeH,CAhBD","sourcesContent":["import * as actionTypes from '../constants/actionTypes';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_ALL:\r\n            return action.payload;\r\n        case actionTypes.CREATE:\r\n            return [...posts, action.payload];\r\n        case actionTypes.UPDATE:\r\n        case actionTypes.LIKE:\r\n            return posts.map((post) =>\r\n                post._id === action.payload._id ? action.payload : post\r\n            );\r\n        case actionTypes.DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}